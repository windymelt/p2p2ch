# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="ZgUk`8^xaYJ3o]U[D9rTg1G<YRA`;cPZ:weDiI5aVAb:=mDB/frau5eHEteBL>VG"

# The application languages
# ~~~~~
application.langs="ja"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router 
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point. 
# Furthermore, it's assumed your route file is named properly. 
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
db.default.driver=org.h2.Driver
db.default.url="jdbc:h2:file:p2p2ch.db"
db.default.user=sa
db.default.password=""
%test.db=mem
%test.jpa.ddl=create-drop

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled
applyEvolutions.default=true

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=ERROR

# Logger provided to your application:
logger.application=ERROR

default.charset="Shift_JIS"

p2pakka {
automatic-portmap = true
akka {
    loglevel = "INFO"
    actor {
        provider = "akka.remote.RemoteActorRefProvider"
	retrieveBodyParserTimeout = "10 second"
    }
    remote {
        log-remote-lifecycle-events = off
#       log-received-messages = on
#       log-sent-messages = on
        enabled-transports = ["akka.remote.netty.tcp"]

        netty.tcp {
            hostname = "localhost"
            port = 8080
            reuse-address = off-for-windows
            use-passive-connections = on
            }
        }
    }
}